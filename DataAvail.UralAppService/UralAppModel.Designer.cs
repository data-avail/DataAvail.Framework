//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 03.04.2012 12:26:31
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Collections.Generic;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.Data;
using System.Linq;
using System.Data.Common;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DataAvail.UralAppModel", "Product_ProductTagMap", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAvail.UralAppModel.Product), "ProductTagMaps", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAvail.UralAppModel.ProductTagMap), true)]
[assembly: EdmRelationshipAttribute("DataAvail.UralAppModel", "Tag_ProductTagMap", "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAvail.UralAppModel.Tag), "ProductTagMaps", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAvail.UralAppModel.ProductTagMap), true)]
[assembly: EdmRelationshipAttribute("DataAvail.UralAppModel", "Producer_Product", "Producer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAvail.UralAppModel.Producer), "Products", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAvail.UralAppModel.Product), true)]

#endregion

namespace DataAvail.UralAppModel
{

    #region Model

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Model : ObjectContext
    {
        #region Constructors

        /// <summary>
        /// Initialize a new Model object.
        /// </summary>
        public Model() : 
                base(@"name=UralAppModelConnectionString", "Model")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initializes a new Model object using the connection string found in the 'Model' section of the application configuration file.
        /// </summary>
        public Model(string connectionString) : 
                base(connectionString, "Model")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new Model object.
        /// </summary>
        public Model(EntityConnection connection) : base(connection, "Model")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectSet Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tag> Tags
        {
            get
            {
                if ((_Tags == null))
                {
                    _Tags = base.CreateObjectSet<Tag>("Tags");
                }
                return _Tags;
            }
        }
        private ObjectSet<Tag> _Tags;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductTagMap> ProductTagMaps
        {
            get
            {
                if ((_ProductTagMaps == null))
                {
                    _ProductTagMaps = base.CreateObjectSet<ProductTagMap>("ProductTagMaps");
                }
                return _ProductTagMaps;
            }
        }
        private ObjectSet<ProductTagMap> _ProductTagMaps;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Producer> Producers
        {
            get
            {
                if ((_Producers == null))
                {
                    _Producers = base.CreateObjectSet<Producer>("Producers");
                }
                return _Producers;
            }
        }
        private ObjectSet<Producer> _Producers;

        #endregion
        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Tags EntitySet.
        /// </summary>
        public void AddToTags(Tag tag)
        {
            base.AddObject("Tags", tag);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ProductTagMaps EntitySet.
        /// </summary>
        public void AddToProductTagMaps(ProductTagMap productTagMap)
        {
            base.AddObject("ProductTagMaps", productTagMap);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Producers EntitySet.
        /// </summary>
        public void AddToProducers(Producer producer)
        {
            base.AddObject("Producers", producer);
        }

        #endregion
    }

    #endregion

    #region Entity Classes

    #region Product

    /// <summary>
    /// There are no comments for DataAvail.UralAppModel.Product in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataAvail.UralAppModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static Product CreateProduct(int id, string name)
        {
            Product product = new Product();
            product.Id = id;
            product.Name = name;
            return product;
        }

        #endregion

        #region Properties
    
    /// <summary>
    /// There are no comments for Id in the schema.
    /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
    /// <summary>
    /// There are no comments for Name in the schema.
    /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
    /// <summary>
    /// There are no comments for ProducerId in the schema.
    /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> ProducerId
        {
            get
            {
                global::System.Nullable<int> value = _ProducerId;
                OnGetProducerId(ref value);
                return value;
            }
            set
            {
                if (_ProducerId != value)
                {
                  OnProducerIdChanging(ref value);
                  ReportPropertyChanging("ProducerId");
                  _ProducerId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ProducerId");
                  OnProducerIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _ProducerId;
        partial void OnGetProducerId(ref global::System.Nullable<int> value);
        partial void OnProducerIdChanging(ref global::System.Nullable<int> value);
        partial void OnProducerIdChanged();

        #endregion

        #region Navigation Properties
        /// <summary>
        /// There are no comments for ProductTagMap in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataAvail.UralAppModel", "Product_ProductTagMap", "ProductTagMaps")]


        public EntityCollection<ProductTagMap> ProductTagMaps
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ProductTagMap>("DataAvail.UralAppModel.Product_ProductTagMap", "ProductTagMaps");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ProductTagMap>("DataAvail.UralAppModel.Product_ProductTagMap", "ProductTagMaps", value);
                }
            }
        }
        /// <summary>
        /// There are no comments for Producer in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataAvail.UralAppModel", "Producer_Product", "Producer")]


        public Producer Producer
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Producer>("DataAvail.UralAppModel.Producer_Product", "Producer").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Producer>("DataAvail.UralAppModel.Producer_Product", "Producer").Value = value;
            }
        }

        /// <summary>
        /// There are no comments for Producer in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Producer> ProducerReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Producer>("DataAvail.UralAppModel.Producer_Product", "Producer");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Producer>("DataAvail.UralAppModel.Producer_Product", "Producer", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Producer>("DataAvail.UralAppModel.Producer_Product", "Producer").Value = null;
                }
            }
        }

        #endregion
    }
    #endregion

    #region Tag

    /// <summary>
    /// There are no comments for DataAvail.UralAppModel.Tag in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataAvail.UralAppModel", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Tag object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static Tag CreateTag(int id, string name)
        {
            Tag tag = new Tag();
            tag.Id = id;
            tag.Name = name;
            return tag;
        }

        #endregion

        #region Properties
    
    /// <summary>
    /// There are no comments for Id in the schema.
    /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
    /// <summary>
    /// There are no comments for Name in the schema.
    /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
        /// <summary>
        /// There are no comments for ProductTagMap in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataAvail.UralAppModel", "Tag_ProductTagMap", "ProductTagMaps")]


        public EntityCollection<ProductTagMap> ProductTagMaps
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ProductTagMap>("DataAvail.UralAppModel.Tag_ProductTagMap", "ProductTagMaps");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ProductTagMap>("DataAvail.UralAppModel.Tag_ProductTagMap", "ProductTagMaps", value);
                }
            }
        }

        #endregion
    }
    #endregion

    #region ProductTagMap

    /// <summary>
    /// There are no comments for DataAvail.UralAppModel.ProductTagMap in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataAvail.UralAppModel", Name="ProductTagMap")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductTagMap : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new ProductTagMap object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="productId">Initial value of ProductId.</param>
        /// <param name="tagId">Initial value of TagId.</param>
        public static ProductTagMap CreateProductTagMap(int id, int productId, int tagId)
        {
            ProductTagMap productTagMap = new ProductTagMap();
            productTagMap.Id = id;
            productTagMap.ProductId = productId;
            productTagMap.TagId = tagId;
            return productTagMap;
        }

        #endregion

        #region Properties
    
    /// <summary>
    /// There are no comments for Id in the schema.
    /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
    /// <summary>
    /// There are no comments for ProductId in the schema.
    /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int ProductId
        {
            get
            {
                int value = _ProductId;
                OnGetProductId(ref value);
                return value;
            }
            set
            {
                if (_ProductId != value)
                {
                  OnProductIdChanging(ref value);
                  ReportPropertyChanging("ProductId");
                  _ProductId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ProductId");
                  OnProductIdChanged();
              }
            }
        }
        private int _ProductId;
        partial void OnGetProductId(ref int value);
        partial void OnProductIdChanging(ref int value);
        partial void OnProductIdChanged();
    
    /// <summary>
    /// There are no comments for TagId in the schema.
    /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int TagId
        {
            get
            {
                int value = _TagId;
                OnGetTagId(ref value);
                return value;
            }
            set
            {
                if (_TagId != value)
                {
                  OnTagIdChanging(ref value);
                  ReportPropertyChanging("TagId");
                  _TagId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TagId");
                  OnTagIdChanged();
              }
            }
        }
        private int _TagId;
        partial void OnGetTagId(ref int value);
        partial void OnTagIdChanging(ref int value);
        partial void OnTagIdChanged();

        #endregion

        #region Navigation Properties
        /// <summary>
        /// There are no comments for Product in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataAvail.UralAppModel", "Product_ProductTagMap", "Product")]


        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Product>("DataAvail.UralAppModel.Product_ProductTagMap", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Product>("DataAvail.UralAppModel.Product_ProductTagMap", "Product").Value = value;
            }
        }

        /// <summary>
        /// There are no comments for Product in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Product>("DataAvail.UralAppModel.Product_ProductTagMap", "Product");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Product>("DataAvail.UralAppModel.Product_ProductTagMap", "Product", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Product>("DataAvail.UralAppModel.Product_ProductTagMap", "Product").Value = null;
                }
            }
        }
        /// <summary>
        /// There are no comments for Tag in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataAvail.UralAppModel", "Tag_ProductTagMap", "Tag")]


        public Tag Tag
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Tag>("DataAvail.UralAppModel.Tag_ProductTagMap", "Tag").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Tag>("DataAvail.UralAppModel.Tag_ProductTagMap", "Tag").Value = value;
            }
        }

        /// <summary>
        /// There are no comments for Tag in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tag> TagReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Tag>("DataAvail.UralAppModel.Tag_ProductTagMap", "Tag");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Tag>("DataAvail.UralAppModel.Tag_ProductTagMap", "Tag", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Tag>("DataAvail.UralAppModel.Tag_ProductTagMap", "Tag").Value = null;
                }
            }
        }

        #endregion
    }
    #endregion

    #region Producer

    /// <summary>
    /// There are no comments for DataAvail.UralAppModel.Producer in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataAvail.UralAppModel", Name="Producer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Producer : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Producer object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static Producer CreateProducer(int id, string name)
        {
            Producer producer = new Producer();
            producer.Id = id;
            producer.Name = name;
            return producer;
        }

        #endregion

        #region Properties
    
    /// <summary>
    /// There are no comments for Id in the schema.
    /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
    /// <summary>
    /// There are no comments for Name in the schema.
    /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
        /// <summary>
        /// There are no comments for Product in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataAvail.UralAppModel", "Producer_Product", "Products")]


        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Product>("DataAvail.UralAppModel.Producer_Product", "Products");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Product>("DataAvail.UralAppModel.Producer_Product", "Products", value);
                }
            }
        }

        #endregion
    }
    #endregion

    #endregion
}
